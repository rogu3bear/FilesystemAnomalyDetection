version: '3.8'

services:
  file-organizer:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: file-organizer
    restart: unless-stopped
    ports:
      - "${PORT:-8080}:8080"  # Web interface
      - "${API_PORT:-3333}:3333"  # API
    volumes:
      - file-organizer-data:/data
      - ${SOURCE_DIR:-~/Downloads}:/data/source:ro  # Source directory (read-only)
      - ${TARGET_DIR:-~/Organized}:/data/target     # Target directory
    environment:
      - FILE_ORGANIZER_API_KEY=${API_KEY:-}  # Optional: Set a fixed API key
      - WEB_INTERFACE_PORT=8080
      - API_SERVER_PORT=3333
      - WEB_INTERFACE_HOST=0.0.0.0
      - N8N_URL=http://n8n:5678
      - FILE_ORGANIZER_API_URL=http://file-organizer:3333
      - TZ=${TZ:-UTC}  # Timezone setting
      - DEBUG=${DEBUG:-False}
    depends_on:
      - n8n
    networks:
      - file-organizer-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  n8n:
    image: n8nio/n8n:latest
    container_name: file-organizer-n8n
    restart: unless-stopped
    ports:
      - "${N8N_PORT:-5678}:5678"
    environment:
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - N8N_HOST=0.0.0.0
      - N8N_EDITOR_BASE_URL=
      - NODE_ENV=production
      - N8N_BASIC_AUTH_ACTIVE=false
      - TZ=${TZ:-UTC}
      - FILE_ORGANIZER_API_URL=http://file-organizer:3333
      - FILE_ORGANIZER_API_KEY=${API_KEY:-}
    volumes:
      - n8n-data:/home/node/.n8n
    networks:
      - file-organizer-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5678/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  file-organizer-data:
    driver: local
  n8n-data:
    driver: local

networks:
  file-organizer-network:
    driver: bridge 