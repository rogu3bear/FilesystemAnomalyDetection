version: '3.8'

services:
  # n8n - Workflow Automation
  n8n:
    image: n8nio/n8n:latest
    container_name: fad-n8n
    restart: unless-stopped
    ports:
      - "5678:5678"
    environment:
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - N8N_HOST=localhost
      - N8N_BASIC_AUTH_ACTIVE=false
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY:-your-random-encryption-key}
      - NODE_ENV=production
      - TZ=${TZ:-UTC}
    volumes:
      - n8n_data:/home/node/.n8n
      - ${SOURCE_DIR:-~/Downloads}:/data/source:ro  # Read-only access to source
      - ${TARGET_DIR:-~/Organized}:/data/target     # Target directory for organized files
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:5678/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - fad-network

  # MongoDB - Database (only used in standard mode, not setup mode)
  mongodb:
    image: mongo:6
    container_name: fad-mongodb
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_USER:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_PASSWORD:-adminpassword}
      - TZ=${TZ:-UTC}
    volumes:
      - mongodb_data:/data/db
    networks:
      - fad-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "'db.runCommand({ping:1})'", "--quiet"]
      interval: 30s
      timeout: 10s
      retries: 3
    # Uncomment to expose MongoDB port for development
    # ports:
    #   - "27017:27017"

  # Backend - Node.js Express API
  backend:
    build:
      context: ./n8n-agent-hub/backend
      dockerfile: Dockerfile
    container_name: fad-backend
    restart: unless-stopped
    depends_on:
      - n8n
      - mongodb
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - MONGODB_URI=mongodb://${MONGODB_USER:-admin}:${MONGODB_PASSWORD:-adminpassword}@mongodb:27017/n8n-agent-hub?authSource=admin
      - JWT_SECRET=${JWT_SECRET:-your-jwt-secret}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - TZ=${TZ:-UTC}
    volumes:
      - ${HOME:-/tmp}/.config/file_anomaly_detection:/app/config
    networks:
      - fad-network
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend - React Web Interface
  frontend:
    build:
      context: ./n8n-agent-hub/frontend
      dockerfile: Dockerfile
    container_name: fad-frontend
    restart: unless-stopped
    ports:
      - "8080:80"
    depends_on:
      - backend
    environment:
      - TZ=${TZ:-UTC}
    networks:
      - fad-network
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:80/index.html"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  fad-network:
    driver: bridge

volumes:
  n8n_data:
    driver: local
  mongodb_data:
    driver: local 